"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Drawer = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
const defaultImports_1 = require("../_common/defaultImports");
const react_1 = require("react");
const re_resizable_1 = require("re-resizable");
const button_1 = require("../button");
const icons_1 = require("../icons");
const Drawer = (_a) => {
    var { children, className = '', expanded, onExpandedChange, position = 'left', type = 'overlay', isResizeable = false, resizeableProps, closeable = true } = _a, restProps = __rest(_a, ["children", "className", "expanded", "onExpandedChange", "position", "type", "isResizeable", "resizeableProps", "closeable"]);
    const setOnExpandedChange = (0, react_1.useCallback)(() => {
        if (onExpandedChange)
            onExpandedChange(!expanded);
    }, [expanded, onExpandedChange]);
    const classes = (0, defaultImports_1.classNames)('ndl-drawer', className, {
        'ndl-drawer-expanded': expanded,
        'ndl-drawer-left': position === 'left',
        'ndl-drawer-right': position === 'right',
        'ndl-drawer-overlay': type === 'overlay',
        'ndl-drawer-push': type === 'push',
    });
    const stylePosition = type === 'overlay' ? 'absolute' : 'relative';
    const Close = () => ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: closeable && ((0, jsx_runtime_1.jsx)(button_1.IconButton, { className: "ndl-drawer-close-button", onClick: setOnExpandedChange, "aria-label": "close-drawer", size: "large", "data-testid": "ndl-drawer-close-button", title: "Close drawer", clean: true, children: (0, jsx_runtime_1.jsx)(icons_1.XMarkIconOutline, { className: "n-w-6 n-h-6" }) })) }));
    if (isResizeable) {
        return ((0, jsx_runtime_1.jsxs)(re_resizable_1.Resizable, Object.assign({ defaultSize: {
                width: 'auto',
                height: '100%',
            } }, resizeableProps, { className: classes, style: Object.assign({ position: stylePosition }, resizeableProps === null || resizeableProps === void 0 ? void 0 : resizeableProps.style), boundsByDirection: true, bounds: "parent", enable: {
                top: false,
                right: position === 'left',
                bottom: false,
                left: position === 'right',
                topRight: false,
                bottomRight: false,
                bottomLeft: false,
                topLeft: false,
            }, children: [children, (0, jsx_runtime_1.jsx)(Close, {})] })));
    }
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({}, restProps, { className: classes, children: [children, (0, jsx_runtime_1.jsx)(Close, {})] })));
};
exports.Drawer = Drawer;
const Header = (_a) => {
    var { children, className = '' } = _a, restProps = __rest(_a, ["children", "className"]);
    const classes = (0, defaultImports_1.classNames)('ndl-drawer-header', className);
    return ((0, jsx_runtime_1.jsx)("h5", Object.assign({}, restProps, { className: classes, children: children })));
};
exports.Drawer.Header = Header;
const Actions = (_a) => {
    var { children, className = '' } = _a, restProps = __rest(_a, ["children", "className"]);
    const classes = (0, defaultImports_1.classNames)('ndl-drawer-actions', className);
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({}, restProps, { className: classes, children: children })));
};
exports.Drawer.Actions = Actions;
const Body = (_a) => {
    var { children, className = '' } = _a, restProps = __rest(_a, ["children", "className"]);
    const classes = (0, defaultImports_1.classNames)('ndl-drawer-body', className);
    return ((0, jsx_runtime_1.jsx)("div", { className: "ndl-drawer-body-wrapper", children: (0, jsx_runtime_1.jsx)("div", Object.assign({}, restProps, { className: classes, children: children })) }));
};
exports.Drawer.Body = Body;
exports.default = exports.Drawer;
//# sourceMappingURL=Drawer.js.map