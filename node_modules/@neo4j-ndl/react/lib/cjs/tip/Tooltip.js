"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
const react_1 = __importDefault(require("react"));
const defaultImports_1 = require("../_common/defaultImports");
const theme_1 = require("../theme");
const Tooltip = react_1.default.forwardRef(function Tooltip(_a, ref) {
    var { arrowPosition, children, className } = _a, restProps = __rest(_a, ["arrowPosition", "children", "className"]);
    const { themeClassName } = (0, theme_1.useNeedleTheme)();
    const wrapperClasses = (0, defaultImports_1.classNames)('ndl-tooltip-wrapper', themeClassName, className);
    const triangleClasses = (0, defaultImports_1.classNames)('ndl-tooltip-triangle', {
        'ndl-top': arrowPosition === 'top',
        'ndl-bottom': arrowPosition === 'bottom',
        'ndl-left': arrowPosition === 'left',
        'ndl-right': arrowPosition === 'right',
        'ndl-top-left': arrowPosition === 'top-left',
        'ndl-top-right': arrowPosition === 'top-right',
    });
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({}, restProps, { role: "tooltip", className: wrapperClasses, ref: ref, children: [children, (0, jsx_runtime_1.jsx)("div", { className: triangleClasses })] })));
});
exports.default = Tooltip;
//# sourceMappingURL=Tooltip.js.map