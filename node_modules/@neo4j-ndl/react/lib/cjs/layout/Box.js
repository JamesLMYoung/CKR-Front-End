"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Box = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
const react_1 = require("react");
const types_1 = require("./types");
/**
 * Box is a general-purpose container that allows for controlled use of design tokens.
 * Use the given props to configure display behavior and styling that aligns with Needle's tokens.
 */
exports.Box = (0, react_1.forwardRef)(function Box(_a, ref) {
    var { as = 'div', padding, paddingInline, paddingInlineStart, paddingInlineEnd, paddingBlockEnd, paddingBlockStart, borderRadius, children } = _a, restProps = __rest(_a, ["as", "padding", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlockEnd", "paddingBlockStart", "borderRadius", "children"]);
    const Component = as;
    const style = {
        padding: (0, types_1.getSpacing)(padding, 'padding'),
        paddingInline: (0, types_1.getSpacing)(paddingInline, 'paddingInline'),
        paddingInlineStart: (0, types_1.getSpacing)(paddingInlineStart, 'paddingInlineStart'),
        paddingInlineEnd: (0, types_1.getSpacing)(paddingInlineEnd, 'paddingInlineEnd'),
        paddingBlockEnd: (0, types_1.getSpacing)(paddingBlockEnd, 'paddingBlockEnd'),
        paddingBlockStart: (0, types_1.getSpacing)(paddingBlockStart, 'paddingBlockStart'),
        borderRadius: (0, types_1.getRadius)(borderRadius, 'borderRadius'),
    };
    return ((0, jsx_runtime_1.jsx)(Component, Object.assign({ ref: ref }, restProps, { style: Object.assign(Object.assign({}, style), restProps.style), children: children })));
});
//# sourceMappingURL=Box.js.map