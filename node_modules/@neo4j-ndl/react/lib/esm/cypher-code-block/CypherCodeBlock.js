import { jsx as _jsx } from "react/jsx-runtime";
/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import React, { useEffect, useRef, useState } from 'react';
import { CypherEditor } from '@neo4j-cypher/react-codemirror';
import { CodeBlockWrapper } from '../_common/CodeBlockWrapper';
export const CypherCodeBlock = React.forwardRef(function CypherCodeBlock({ maxHeight, code, headerTitle, theme = 'light', showLineNumbers, disabled, actions, }, ref) {
    const cypherEditorRef = useRef(null);
    const [shouldShowExpandButton, setShouldShowExpandButton] = useState(maxHeight !== undefined);
    useEffect(() => {
        var _a;
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore 'CypherEditor' doesn't convey types correctly.
        const editorHtml = (_a = cypherEditorRef.current) === null || _a === void 0 ? void 0 : _a.editorRef;
        if (!editorHtml) {
            return;
        }
        const editorContentHtml = editorHtml.querySelector('.cm-content');
        if (!editorContentHtml) {
            return;
        }
        editorContentHtml.style.padding = `0 calc(0.75em + ${headerTitle === undefined || headerTitle === ''
            ? ((actions === null || actions === void 0 ? void 0 : actions.length) || (shouldShowExpandButton ? 1 : 0)) * 36
            : (shouldShowExpandButton ? 1 : 0) * 36
        // 0.45em on the left to align the header title if no showing line numbers
        }px) 0.75em 0.45em`;
    }, [headerTitle, actions, shouldShowExpandButton]);
    return (_jsx(CodeBlockWrapper, { ref: ref, maxHeight: maxHeight, code: code, headerTitle: headerTitle, disabled: disabled, actions: actions, shouldShowExpandButton: shouldShowExpandButton, setShouldShowExpandButton: setShouldShowExpandButton, children: _jsx(CypherEditor, { ref: cypherEditorRef, className: "ndl-cypher-editor ndl-cypher-code-block", lineNumbers: showLineNumbers, value: code, theme: theme, readOnly: true, readOnlyCursor: true, autofocus: false }) }));
});
//# sourceMappingURL=CypherCodeBlock.js.map