/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import React, { type ComponentProps } from 'react';
import FocusLock from 'react-focus-lock';
/**
 * A modified version of the Material UI (@mui/material) Popover component.
 * We use a modified/slimmed version for easier maintenance.
 *
 * See the LICENSES.txt file for license for @mui/material
 */
type ElementBase = Omit<React.HTMLProps<HTMLElement>, 'as' | 'size'> & {
    /** Override the root element rendered for the component */
    as?: string | React.ComponentType<any>;
};
type Vertical = 'top' | 'bottom';
type Horizontal = 'left' | 'right' | 'center';
export interface PopoverProps extends ElementBase {
    open: boolean;
    children: React.ReactNode | string;
    /** The element the menu should attach to */
    anchorEl?: HTMLElement | React.RefObject<HTMLElement> | null;
    /**
     * The position on the anchor element
     * that the menu should attach to
     *
     *      +-----------------+
     *      |                 |
     *      | Popover         | +--Transform Origin
     *      | Parent Element  | |  top, left
     *      |                 | |
     *      +-----------------+ |
     *                        | +-------------+
     *      Anchor Origin ----+ |  Popped     |
     *      bottom,right        |  Element    |
     *                          +-------------+
     *
     */
    anchorOrigin?: {
        vertical: Vertical;
        horizontal: Horizontal;
    };
    /** The position on the menu element that should attach to the anchorOrigin point
     on the anchorEl */
    transformOrigin?: {
        vertical: Vertical;
        horizontal: Horizontal;
    };
    /** The offset number in px of the transform origin point relative to the anchor origin point */
    transformOriginOffsetFromAnchorOrigin?: {
        vertical: number;
        horizontal: number;
    };
    onClose?: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;
    /** Additional classes */
    className?: string;
    /** Whether the menu is nested. IE is this menu a sub menu */
    nested?: boolean;
    /** Disable backdrop -  Allows event capturing - and pointer events to pass to elements below */
    disableBackdrop?: boolean;
    /** Use anchorEl for portal's container */
    anchorPortal?: boolean;
    /** If the popover should constrain the focus inside the popover while open */
    captureFocus?: boolean;
    /**
     * Props to pass to the FocusLock component
     * @see https://github.com/theKashey/react-focus-lock
     */
    focusLockProps?: ComponentProps<typeof FocusLock>;
}
export declare const Popover: React.ForwardRefExoticComponent<Omit<PopoverProps, "ref"> & React.RefAttributes<unknown>>;
export {};
