/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import React from 'react';
import { type ElementBase } from '../helpers';
/**
 *
 *
 * Types
 *
 *
 */
export interface CommonTagProps extends ElementBase {
    children: string | React.ReactNode;
    /** Type of the tag */
    type?: 'destructive' | 'default';
}
export interface RemoveableTagProps extends CommonTagProps {
    /** Adds a "x" icon is set to true */
    removeable: true;
    /** Handler when remove icon is clicked. Required if `removeable` is true */
    onRemove: (e: React.KeyboardEvent<HTMLElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
}
export interface NonRemovableTagProps extends CommonTagProps {
    removeable?: false;
    onRemove?: never;
}
export type TagProps = RemoveableTagProps | NonRemovableTagProps;
/**
 *
 *
 * Helpers
 *
 *
 */
/** Add any helper functions here. */
/**
 *
 *
 * Tag Component
 *
 *
 */
export declare const Tag: React.ForwardRefExoticComponent<TagProps & React.RefAttributes<HTMLDivElement>>;
export default Tag;
