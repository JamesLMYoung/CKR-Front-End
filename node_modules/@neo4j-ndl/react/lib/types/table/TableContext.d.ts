/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/// <reference types="react" />
import { type RowData, type Table as TableType } from '@tanstack/react-table';
import { type Body, type BodyCell, type BodyRow, type TableResults, type ResizingBar, type Navigation, type Header, type Pagination, type NoDataPlaceholder, type LoadingPlaceholder, type PaginationNumericButtons, type PaginationNumericButton, type HeaderCell, type PaginationArrowButton, type RowsPerPage, type ColumnControls, type SortingButton, type Scrollable } from './Components';
type Nullable<T> = T | null;
export interface TableComponentsInterface<T extends RowData> {
    ResizingBar?: Nullable<typeof ResizingBar<T>>;
    /**
     * Header Section
     */
    Header?: Nullable<typeof Header>;
    HeaderCell?: Nullable<typeof HeaderCell<T>>;
    ColumnControls?: Nullable<typeof ColumnControls>;
    SortingButton?: Nullable<typeof SortingButton>;
    /**
     * Body Section
     */
    Scrollable?: Nullable<typeof Scrollable>;
    Body?: Nullable<typeof Body>;
    BodyCell?: Nullable<typeof BodyCell<T>>;
    BodyRow?: Nullable<typeof BodyRow<T>>;
    LoadingPlaceholder?: Nullable<typeof LoadingPlaceholder>;
    NoDataPlaceholder?: Nullable<typeof NoDataPlaceholder>;
    /**
     * Navigation Section
     */
    Navigation?: Nullable<typeof Navigation>;
    Pagination?: Nullable<typeof Pagination>;
    PaginationArrowButton?: Nullable<typeof PaginationArrowButton>;
    TableResults?: Nullable<typeof TableResults>;
    RowsPerPage?: Nullable<typeof RowsPerPage>;
    PaginationNumericButtons?: Nullable<typeof PaginationNumericButtons>;
    PaginationNumericButton?: Nullable<typeof PaginationNumericButton>;
}
export interface TableContextType<T extends RowData> {
    resizable: boolean;
    tableProps: TableType<T>;
    components: TableComponentsInterface<T>;
    loading: boolean;
}
export declare const TableContext: import("react").Context<TableContextType<any>>;
export declare function useTableContext<T extends RowData>(): TableContextType<T>;
export {};
