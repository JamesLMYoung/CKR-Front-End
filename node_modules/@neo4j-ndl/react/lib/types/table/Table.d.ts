/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/// <reference types="react" />
import { type ElementBase } from '../helpers';
import { type Table as TableType } from '@tanstack/react-table';
import { type TableComponentsInterface } from './TableContext';
/**
 *
 * Helping functions
 *
 */
export declare const TableComponents: {
    ResizingBar: <T extends unknown>({ header, children, innerProps, }: import("./Components").ResizingBarProps<T>) => import("react/jsx-runtime").JSX.Element;
    Header: ({ children, innerProps }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    Body: ({ children, innerProps }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    BodyCell: <T_1 extends unknown>({ cell, children, innerProps, }: import("./Components").BodyCellProps<T_1>) => import("react/jsx-runtime").JSX.Element;
    BodyRow: <T_2 extends unknown>({ row, children, innerProps, }: import("./Components").BodyRowProps<T_2>) => import("react/jsx-runtime").JSX.Element;
    HeaderCell: <T_3 extends unknown>({ cell, children, innerProps, }: import("./Components").HeaderCellProps<T_3>) => import("react/jsx-runtime").JSX.Element;
    ColumnControls: <T_4 extends unknown>({ cell, controls, children, innerProps, }: import("./Components").ColumnControlsProps<T_4>) => import("react/jsx-runtime").JSX.Element;
    Navigation: ({ children, innerProps, }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    TableResults: ({ children, innerProps, manualPagination, }: import("./Components").TableResultProps) => import("react/jsx-runtime").JSX.Element;
    RowsPerPage: ({ children, innerProps, }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    Pagination: ({ children, innerProps, }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    PaginationNumericButtons: () => import("react/jsx-runtime").JSX.Element;
    PaginationNumericButton: ({ currentIndex, isSelected, children, innerProps, }: import("./Components").PaginationNumericButtonProps) => import("react/jsx-runtime").JSX.Element;
    PaginationArrowButton: ({ action, children, innerProps, }: import("./Components").PaginationArrowButtonProps) => import("react/jsx-runtime").JSX.Element;
    LoadingPlaceholder: ({ children, innerProps, }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    NoDataPlaceholder: ({ children, innerProps, }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
    SortingButton: ({ sortDirection, children, innerProps, }: import("./Components").SortingButtonProps) => import("react/jsx-runtime").JSX.Element;
    Scrollable: ({ children, innerProps }: import("./Components").CommonInnerProps<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
};
/**
 * @deprecated Use DataGrid component instead
 * Will be removed in Needle v3.0
 */
declare const TableNameSpace: (<T extends unknown>(props: {
    resizable?: boolean | undefined;
    loading?: boolean | undefined;
    focusableCells?: boolean | undefined;
    tableProps: TableType<T>;
    components?: TableComponentsInterface<T> | undefined;
} & Omit<ElementBase<HTMLDivElement>, "as" | "controls" | "data" | "headers" | "rows"> & import("react").RefAttributes<HTMLDivElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | null) & {
    RowActions: ({ className, ...restProps }: ElementBase<HTMLDivElement>) => import("react/jsx-runtime").JSX.Element;
};
export default TableNameSpace;
