/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import { type ComponentPropsWithoutRef } from 'react';
import { type ResizableProps } from 're-resizable';
import { type ElementBase } from '../helpers';
export type DrawerPosition = 'left' | 'right';
export type DrawerType = 'overlay' | 'push';
export interface DrawerProps extends ElementBase<HTMLDivElement> {
    /** If the component is expanded or hidden. */
    expanded: boolean;
    /** What to do on expanded change. */
    onExpandedChange?: (expanded: boolean) => void;
    /** Which position the component will appear. */
    position?: DrawerPosition;
    /** How the component affects sibling content. */
    type?: DrawerType;
    /** The drawer can be resized. */
    isResizeable?: boolean;
    /** To use this prop the isResizeable prop must be set to true. For overriding the third party library props: https://github.com/bokuweb/re-resizable */
    resizeableProps?: ResizableProps;
    /** Is closeable. */
    closeable?: boolean;
}
export declare const Drawer: {
    ({ children, className, expanded, onExpandedChange, position, type, isResizeable, resizeableProps, closeable, ...restProps }: DrawerProps): import("react/jsx-runtime").JSX.Element;
    Header: ({ children, className, ...restProps }: DrawerHeaderProps) => import("react/jsx-runtime").JSX.Element;
    Actions: ({ children, className, ...restProps }: DrawerActionsProps) => import("react/jsx-runtime").JSX.Element;
    Body: ({ children, className, ...restProps }: DrawerBodyProps) => import("react/jsx-runtime").JSX.Element;
};
type DrawerHeaderProps = ComponentPropsWithoutRef<'h5'>;
type DrawerActionsProps = ComponentPropsWithoutRef<'div'>;
type DrawerBodyProps = ComponentPropsWithoutRef<'div'>;
export default Drawer;
