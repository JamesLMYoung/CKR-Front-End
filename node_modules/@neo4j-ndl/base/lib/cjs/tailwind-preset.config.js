"use strict";
/**
 *
 *  Copyright (c) "Neo4j"
 *  Neo4j Sweden AB [http://neo4j.com]
 *
 *  This file is part of Neo4j.
 *
 *  Neo4j is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tailwindConfig = void 0;
var tailwindTheme_js_1 = require("./tailwindTheme.js");
var tokens_esm_1 = require("./tokens/js/tokens-esm");
/**
 * Tailwind CSS Configuration
 * containing all configurations we need
 * for our components
 */
/** @type {import('tailwindcss').Config} */
exports.tailwindConfig = {
    prefix: 'n-',
    content: [
        './src/**/*.{tsx,md,jsx,js,html,mdx}',
        '../react/src/**/*.{tsx,md,jsx,js,html,mdx}',
        '../storybook/src/**/*.{tsx,md,jsx,js,html,mdx}',
    ],
    // remove classes like `text-opacity` but leave all color utilities
    // eventually we should generate components in a more
    // "tailwind" way to avoid safelisting like below
    safelist: [
        {
            pattern: /^(hover:)?n-text-(palette|dark|light|primary|danger|warning|success|blueberry|mint|neutral)-/,
            variants: ['hover'],
        },
        {
            pattern: /^(hover:)?n-bg-(palette|dark|light|primary|danger|warning|success|blueberry|mint|neutral)-/,
            variants: ['hover'],
        },
        {
            // For clicked classes
            pattern: /^(active:)?n-bg-(palette|dark|light|primary|danger|warning|success|blueberry|mint|neutral)-/,
            variants: ['active'],
        },
        {
            pattern: /^(hover:)?n-border-(palette|dark|light|primary|danger|warning|success|blueberry|mint|neutral)-/,
            variants: ['hover'],
        },
    ],
    theme: __assign(__assign({}, tailwindTheme_js_1.tailwindTheme), { extend: {
            colors: {
                transparent: 'transparent',
                current: 'currentColor',
            },
            spacing: __assign(__assign({}, Object.keys(tokens_esm_1.tokens.space).reduce(function (accumulator, currentValue) {
                var _a;
                return (__assign(__assign({}, accumulator), (_a = {}, _a["token-".concat(currentValue)] = tokens_esm_1.tokens.space[currentValue], _a)));
            }, {})), { 0: '0px', px: '1px', 0.5: '2px', 1: '4px', 1.5: '6px', 2: '8px', 2.5: '10px', 3: '12px', 3.5: '14px', 4: '16px', 5: '20px', 6: '24px', 7: '28px', 8: '32px', 9: '36px', 10: '40px', 11: '44px', 12: '48px', 14: '56px', 16: '64px', 20: '20px', 24: '96px', 28: '112px', 32: '128px', 36: '144px', 40: '160px', 44: '176px', 48: '192px', 52: '208px', 56: '224px', 60: '240px', 64: '256px', 72: '288px', 80: '320px', 96: '384px' }),
        } }),
    // Enable only necessary plugins
    // https://tailwindcss.com/docs/configuration#core-plugins
    plugins: [],
};
//# sourceMappingURL=tailwind-preset.config.js.map